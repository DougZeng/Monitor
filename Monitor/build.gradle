buildscript {
    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.2'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'

repositories {
    jcenter()
    google()
    maven {
        url  "http://dl.bintray.com/fotoapparat/fotoapparat"
    }
}

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"
    defaultConfig {
        applicationId 'org.doug.monitor'
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 180712
        versionName "18.7.12"
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
//        multiDexEnabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        releaseConfig {
            storeFile file('../dougkeystore.jks')
            storePassword System.getenv("KEYSTORE_PASS")
            keyAlias System.getenv("ALIAS_NAME")
            keyPassword System.getenv("ALIAS_PASS")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-android-optimize.txt'
            signingConfig signingConfigs.releaseConfig
        }
    }
    productFlavors {
    }
    sourceSets {
        main {
            proto {
                //main目录新建proto目录
                srcDir 'src/main/proto'
                include '**/*.proto'
            }
            java {
                srcDir 'src/main/java'
            }
        }
    }

}

//构建task
protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.1.0'
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.builtins {
                java {}
                // Add cpp output without any option.
                // DO NOT omit the braces if you want this builtin to be added.
                cpp {}
            }
        }
    }
    //生成目录
    generatedFilesBaseDir = "$projectDir/src/generated"
}


dependencies {
    compile 'com.android.support:support-compat:27.1.1'
    compile 'com.android.support:appcompat-v7:27.1.1'
    compile 'com.jaredrummler:android-processes:1.0.9'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.34'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    compile 'com.android.support:design:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    compile 'com.an.deviceinfo:deviceinfo:0.1.3'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation 'com.orhanobut:logger:2.2.0'
    compile 'com.google.protobuf:protobuf-java:3.4.0'
    compile 'com.google.protobuf:protoc:3.1.0'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    implementation files('libs/core-3.2.1.jar')

    compile 'com.bugsnag:bugsnag-android-ndk:1.2.0'

}

//android.applicationVariants.all { variant ->
//    variant.outputs.all {
//        outputFileName = "${variant.applicationId}_${variant.versionName}_${variant.versionCode}.apk"
//    }
//}
